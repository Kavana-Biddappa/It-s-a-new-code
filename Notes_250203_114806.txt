# Split inputs
X_train, X_val, time_train, time_val, desc_train, desc_val, cat_train, cat_val, fam_train, fam_val, num_train, num_val = train_test_split(
    time_features, desc_features, category_features, family_features, numerical_features, test_size=0.2, random_state=42
)

# Split outputs (targets)
y_desc_train, y_desc_val, y_cat_train, y_cat_val, y_fam_train, y_fam_val, y_cycle_train, y_cycle_val, \
y_plan_train, y_plan_val, y_unplan_train, y_unplan_val, y_tgt_train, y_tgt_val, y_prod_train, y_prod_val = train_test_split(
    desc_features, category_features, family_features, df["cycle_time"].values, df["planned_downtime"].values, 
    df["unplanned_downtime"].values, df["part_produced_tgt"].values, df["parts_produced"].values, test_size=0.2, random_state=42
)

# Prepare the final inputs and outputs for model.fit()
X_train_final = [time_train, desc_train, cat_train, fam_train, num_train]
X_val_final = [time_val, desc_val, cat_val, fam_val, num_val]

Y_train_final = [y_desc_train, y_cat_train, y_fam_train, y_cycle_train, y_plan_train, y_unplan_train, y_tgt_train, y_prod_train]
Y_val_final = [y_desc_val, y_cat_val, y_fam_val, y_cycle_val, y_plan_val, y_unplan_val, y_tgt_val, y_prod_val]